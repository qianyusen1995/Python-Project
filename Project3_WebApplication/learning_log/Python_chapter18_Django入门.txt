Django入门 http://djangoproject.com/
动手试一试
18-1 新项目 ：为更深入地了解Django做了些什么，
创建两个空项目，看看Django创建了什么。新建一个文件夹，并给它指定简单的名称，如InstaBook或FaceGram（不要在目录learning_log中新建该文件夹），在终端中切换到该文件夹，并创建一个虚拟环境。
在这个虚拟环境中安装Django，并执行命令 django-admin. startproject instabook .（千万不要忘了这个命令末尾的句点）。
看看这个命令创建了哪些文件和文件夹，并与项目“学习笔记”包含的文件和文件夹进行比较。这样多做几次，直到对Django新建项目时创建的东西了如指掌。然后，将项目目录删除——如果你想这样做的话。

18-2 简短的条目 ：当前，Django在管理网站或shell中显示Entry 实例时，模型Entry 的方法__str__() 都在它的末尾加上省略号。请在方法__str__() 中添加一条if 语句，以便仅在条目长度超过50字符时才添加省略号。使用管理网站来添加一个长度少于50字符的条目，并核实显示它时没有省略号。

def __str__(self): #方法__str__() 告诉Django，呈现条目时应显示哪些信息
    """返回模型的字符串表示"""
    if len(self.text) > 50:
        return self.text[:50] + "..." #只显示text 的前50个字符（见❺）。我们还添加了一个省略号，指出显示的并非整个条目。
    else:
        return self.text  

18-3 Django API ：编写访问项目中的数据的代码时，你编写的是查询。请浏览有关如何查询数据的文档，其网址为https://docs.djangoproject.com/en/7.8/topics/db/queries/。其中大部分内容都是你不熟悉的，但等你自己开发项目时，这些内容会很有用。

18-4 比萨店：新建一个名为pizzeria 的项目，并在其中添加一个名为pizzas 的应用程序。
定义一个名为Pizza 的模型，它包含字段name，用于存储比萨名称，如Hawaiian和Meat Lovers。
定义一个名为Topping 的模型，它包含字段pizza 和name，其中字段pizza 是一个关联到Pizza 的外键，而字段name 用于存储配料，如pineapple、Canadian bacon 和sausage
向管理网站注册这两个模型，并使用管理网站输入一些比萨名和配料。
使用shell来查看你输入的数据。
a = Pizza.objects.get(id=1)

18-5 膳食规划程序 ：假设你要创建一个应用程序，帮助用户规划一周的膳食。为此，新建一个文件夹，并将其命名为meal_planner，再在这个文件夹中新建一个Django项目。接下来，新建一个名为meal_plans 的应用程序，并为这个项目创建一个简单的主页。
18-6 比萨店主页 ：在你为完成练习18-4而创建的项目Pizzeria中，添加一个主页。
18-8 比萨店页面 ：在练习18-6中开发的项目Pizzeria中添加一个页面，
它显示供应的比萨的名称。然后，将每个比萨名称都设置成一个链接，单击这种链接将显示一个页面，其中列出了相应比萨的配料。请务必使用模板继承来高效地创建页面。
（已完成18章练习）


Python 19 chapter
19-1 博客 ：新建一个Django项目，将其命名为Blog。在这个项目中，创建一个名为blogs的应用程序，并在其中创建一个名为BlogPost 的模型。这个模型应包含title 、text 和date_added 等字段。为这个项目创建一个超级用户，并使用管理网站创建几个简短的帖子。创建一个主页，在其中按时间顺序显示所有的子。
创建两个表单，其中一个用于发布新帖子，另一个用于编辑既有的帖子。
尝试填写这些表单，确认它们能够正确地工作
19-2 博客账户 ：在你为完成练习19-1而开发的项目Blog中，添加一个用户身份验证和注册系统。让已登录的用户在屏幕上看到其用户名，并让未注册的用户看到一个到注册页面的链接。



19-3 重构 ：在views.py中，我们在两个地方核实主题关联到的用户为当前登录的用户。请将执行这种检查的代码放在一个名为check_topic_owner() 的函数中，并在恰当的地方调用这个函数。
19-4 保护页面new_entry ：一个用户可在另一个用户的学习笔记中添加条目，方法是输入这样的URL，即其中包含输入另一个用户的主题的ID。为防范这种攻击，请在保存新条目前，核实它所属的主题归当前用户所有。
19-5 受保护的博客 ：在你创建的项目Blog中，确保每篇博文都与特定用户相关联。确保任何用户都可访问所有的博文，但只有已登录的用户能够发表博文以及编辑既有博文。在让用户能够编辑其博文的视图中，在处理表单前确认用户编辑的是他自己发表的博文。


20-1 其他表单 ：我们对login页面和new_topic页面应用了Bootstrap样式。
请对其他基于表单的页面做类似的修改：new_entry 页面、edit_entry 页面和register页面
20-2 设置博客的样式 ：对于你在第19章创建的项目Blog，使用Bootstrap来设置其样式